#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <curl/curl.h>
#include <jansson.h>

char *response;
size_t write_callback(void *ptr, size_t size, size_t nmemb, void *userdata) {
    size_t realsize = size * nmemb;
    response = realloc(response, realsize + 1);
    if (response == NULL) {
        /* out of memory! */
        printf("not enough memory (realloc returned NULL)\n");
        exit(EXIT_FAILURE);
    }
    memcpy(response, ptr, realsize);
    response[realsize] = 0;
    return realsize;
}

int main(void) {
    CURL *curl;
    CURLcode res;
    char post_data[2048];
    char *xbl_token;
    char *xsts_token;
    char *user_hash;

    response = malloc(1);
    curl_global_init(CURL_GLOBAL_ALL);
    curl = curl_easy_init();
    if (curl) {
        // Step 1: Obtain an OAuth2 access token
        curl_easy_setopt(curl, CURLOPT_URL, "https://login.microsoftonline.com/consumers/oauth2/v2.0/devicecode");
        snprintf(post_data, sizeof(post_data), "client_id=feb3836f-0333-4185-8eb9-4cbf0498f947&scope=XboxLive.signin offline_access");
        curl_easy_setopt(curl, CURLOPT_POSTFIELDS, post_data);
        curl_easy_setopt(curl, CURLOPT_POST, 1);
        curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, &write_callback);
        curl_easy_setopt(curl, CURLOPT_WRITEDATA, &response);
        res = curl_easy_perform(curl);
        if (res == CURLE_OK) {
            json_object *jobj = json_tokener_parse(response);
            json_object_object_get_ex(jobj, "device_code", &jobj);
            char *device_code = (char


            // Step 2: Use the device code to obtain an access token
            curl_easy_setopt(curl, CURLOPT_URL, "https://login.microsoftonline.com/consumers/oauth2/v2.0/token");
            snprintf(post_data, sizeof(post_data), "grant_type=urn:ietf:params:oauth:grant-type:device_code&client_id=feb3836f-0333-4185-8eb9-4cbf0498f947&device_code=%s", json_object_get_string(jobj));
            curl_easy_setopt(curl, CURLOPT_POSTFIELDS, post_data);
            curl_easy_setopt(curl, CURLOPT_POST, 1);
            curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, &write_callback);
            curl_easy_setopt(curl, CURLOPT_WRITEDATA, &response);
            res = curl_easy_perform(curl);
            if (res == CURLE_OK) {
                json_object *jobj = json_tokener_parse(response);
                json_object_object_get_ex(jobj, "access_token", &jobj);
                char *access_token = (char *) json_object_get_string(jobj);

                // Step 3: Authenticate with Xbox Live
                curl_easy_setopt(curl, CURLOPT_URL, "https://user.auth.xboxlive.com/user/authenticate");
                snprintf(post_data, sizeof(post_data), "{\"Properties\": {\"AuthMethod\": \"RPS\",\"SiteName\": \"user.auth.xboxlive.com\",\"RpsTicket\": \"d=%s\"},\"RelyingParty\": \"http://auth.xboxlive.com\",\"TokenType\": \"JWT\"}", access_token);
                curl_easy_setopt(curl, CURLOPT_POSTFIELDS, post_data);
                curl_easy_setopt(curl, CURLOPT_POST, 1);
                curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, &write_callback);
                curl_easy_setopt(curl, CURLOPT_WRITEDATA, &response);
                struct curl_slist *headers = NULL;
                headers = curl_slist_append(headers, "Content-Type: application/json");
                headers = curl_slist_append(headers, "Accept: application/json");
                curl_easy_setopt(curl, CURLOPT_HTTPHEADER, headers);
                res = curl_easy_perform(curl);
                if (res == CURLE_OK) {
                    json_object *jobj = json_tokener_parse(response);
                    json_object_object_get_ex(jobj, "Token", &jobj);
                    xbl_token = (char *) json_object_get_string(jobj);
                    json_object_object_get_ex(jobj, "uh

                    // Step 4: Obtain XSTS token for Minecraft
                    curl_easy_setopt(curl, CURLOPT_URL, "https://xsts.auth.xboxlive.com/xsts/authorize");
                    snprintf(post_data, sizeof(post_data), "{\"Properties\": {\"SandboxId\": \"RETAIL\",\"UserTokens\": [\"%s\"]},\"RelyingParty\": \"rp://api.minecraftservices.com/\",\"TokenType\": \"JWT\"}", xbl_token);
                    curl_easy_setopt(curl, CURLOPT_POSTFIELDS, post_data);
                    curl_easy_setopt(curl, CURLOPT_POST, 1);
                    curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, &write_callback);
                    curl_easy_setopt(curl, CURLOPT_WRITEDATA, &response);
                    headers = curl_slist_append(headers, "Content-Type: application/json");
                    headers = curl_slist_append(headers, "Accept: application/json");
                    curl_easy_setopt(curl, CURLOPT_HTTPHEADER, headers);
                    res = curl_easy_perform(curl);
                    if (res == CURLE_OK) {
                        json_object *jobj = json_tokener_parse(response);
                        json_object_object_get_ex(jobj, "Token", &jobj);
                        xsts_token = (char *) json_object_get_string(jobj);

                        // Step 5: Authenticate with Minecraft
                        curl_easy_setopt(curl, CURLOPT_URL, "https://api.minecraftservices.com/authentication/login_with_xbox");
                        snprintf(post_data, sizeof(post_data), "{\"identityToken\": \"XBL3.0 x=%s;%s\"}", userhash, xsts_token);
                        curl_easy_setopt(curl, CURLOPT_POSTFIELDS, post_data);
                        curl_easy_setopt(curl, CURLOPT_POST, 1);
                        curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, &write_callback);
                        curl_easy_setopt(curl, CURLOPT_WRITEDATA, &response);
                        headers = curl_slist_append(headers, "Content-Type: application/json");
                        headers = curl_slist_append(headers, "Accept: application/json");
                        curl_easy_setopt(curl, CURLOPT_HTTPHEADER, headers);
                        res = curl_easy_perform(curl);
                        if (res == CURLE_OK) {
                            // process the response
                            printf("%s", response);
                        }
                    }
                }
            }

